<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>TikTok Downloader</title>
  <style>
    * { box-sizing: border-box; }
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #2f2f2f;
      color: #e0e0e0;
      margin: 0;
      padding: 20px 15px 60px;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    h1 {
      font-size: 2.6rem;
      margin-bottom: 20px;
      text-align: center;
      color: #3b82f6;
      font-weight: 800;
    }
    form#mainForm {
      display: flex;
      width: 100%;
      max-width: 600px;
      gap: 10px;
      margin-bottom: 30px;
    }
    input[type="text"] {
      flex: 1;
      padding: 16px 20px;
      font-size: 1.25rem;
      border-radius: 10px;
      border: none;
      outline: none;
      background-color: #444;
      color: #eee;
    }
    input[type="text"]::placeholder {
      color: #bbb;
    }
    button {
      padding: 16px 24px;
      font-size: 1.25rem;
      border-radius: 10px;
      border: none;
      cursor: pointer;
      font-weight: 700;
      flex-shrink: 0;
    }
    button.paste-btn {
      background-color: #666;
      color: #ddd;
    }
    button.paste-btn:hover {
      background-color: #777;
    }
    button.fetch-btn {
      background-color: #3b82f6;
      color: #fff;
      box-shadow: 0 0 12px #3b82f6aa;
    }
    button.fetch-btn:hover {
      background-color: #2563eb;
    }
    #options {
      display: none;
      flex-direction: column;
      gap: 20px;
      width: 100%;
      max-width: 600px;
      margin-bottom: 40px;
    }
    .download-btn {
      background-color: #1e40af;
      color: #a5b4fc;
      font-weight: 700;
      font-size: 1.3rem;
      padding: 18px 15px;
      border-radius: 12px;
      border: none;
      cursor: pointer;
      box-shadow: 0 0 10px #3b82f655;
      width: 100%;
    }
    .download-btn:hover {
      background-color: #3b82f6;
      color: #fff;
    }
    #videoInfoBox {
      max-width: 600px;
      background: #202020;
      padding: 15px 20px;
      border-radius: 12px;
      display: flex;
      align-items: center;
      gap: 15px;
      margin-bottom: 10px;
    }
    #videoInfoBox img {
      width: 100px;
      border-radius: 8px;
    }
    #videoInfoBox .info-text p {
      margin: 0;
    }
    #videoInfoBox .info-text p:first-child {
      font-size: 1.1rem;
      font-weight: 600;
    }
    #videoInfoBox .info-text p:last-child {
      font-size: 0.95rem;
      color: #999;
    }
    #tempMessage {
      margin-bottom: 15px;
      padding: 10px 15px;
      background-color: #1a1a1a;
      border-left: 4px solid #3b82f6;
      border-radius: 8px;
      font-weight: 500;
      color: #3b82f6;
    }
    .accordion {
      width: 100%;
      max-width: 600px;
      background-color: #383838;
      border-radius: 12px;
      box-shadow: 0 4px 14px rgb(0 0 0 / 0.5);
    }
    .accordion-item {
      border-bottom: 1px solid #555;
    }
    .accordion-header {
      background-color: #444;
      cursor: pointer;
      padding: 18px 24px;
      font-weight: 700;
      font-size: 1.2rem;
      color: #3b82f6;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .accordion-header:hover,
    .accordion-header.active {
      background-color: #3b82f6;
      color: #fff;
    }
    .accordion-header::after {
      content: "‚ñ∂";
      font-size: 1rem;
      color: #a5b4fc;
      transition: transform 0.3s;
    }
    .accordion-header.active::after {
      transform: rotate(90deg);
      color: #fff;
    }
    .accordion-content {
      max-height: 0;
      overflow: hidden;
      background-color: #2a2a2a;
      color: #ddd;
      padding: 0 24px;
      font-size: 1rem;
      transition: max-height 0.35s ease;
    }
    .accordion-content.open {
      padding: 15px 24px 20px;
      max-height: 600px;
    }
    #about {
      max-width: 600px;
      color: #ccc;
      font-size: 1.1rem;
      line-height: 1.8;
    }
    #about h2 {
      color: #3b82f6;
      font-weight: 700;
      margin-bottom: 18px;
      font-size: 1.8rem;
    }
    #about p {
      margin-bottom: 30px;
    }
    @media (max-width: 480px) {
      h1 { font-size: 2rem; }
      input[type="text"], button, .download-btn, .accordion-header {
        font-size: 1.1rem;
        padding: 14px 16px;
      }
      form#mainForm { flex-direction: column; }
      button { width: 100%; margin-top: 10px; }
    }
  </style>
</head>
<body>
  <h1>TikTok Downloader</h1>

  <form id="mainForm" onsubmit="return false;">
    <input type="text" id="videoUrl" placeholder="Paste TikTok video link here..." required />
    <button type="button" class="paste-btn" id="pasteBtn" onclick="handlePasteOrClear()">Paste</button>
    <button type="button" class="fetch-btn" onclick="fetchLinks()">Download</button>
  </form>

  <div id="options"></div>

  <section id="about">
    <h2>Unlimited TikTok Downloads</h2>
    <p>Download as many TikTok videos as you want ‚Äî totally free. Our downloader helps you save your favorite content easily.</p>

    <h2>No Watermarks</h2>
    <p>Get clean MP4 video files without any TikTok logos. Great for sharing or personal use.</p>

    <h2>Video & Audio Formats</h2>
    <p>You can save TikTok in HD, SD, or extract audio as MP3. One click, and it's yours.</p>

    <h2>How to Use</h2>
    <p>Copy the TikTok video link, paste it above, hit download, and choose the format. It‚Äôs that easy.</p>
  </section>

  <section class="accordion">
    <div class="accordion-item">
      <button class="accordion-header" aria-expanded="false" aria-controls="faq1" id="faq1-button">
        How do I get the TikTok video link?
      </button>
      <div id="faq1" class="accordion-content" role="region" aria-labelledby="faq1-button">
        <p>Open TikTok, tap ‚ÄúShare‚Äù on a video, then choose ‚ÄúCopy Link‚Äù.</p>
      </div>
    </div>

    <div class="accordion-item">
      <button class="accordion-header" aria-expanded="false" aria-controls="faq2" id="faq2-button">
        How do I paste the link and download?
      </button>
      <div id="faq2" class="accordion-content" role="region" aria-labelledby="faq2-button">
        <p>Paste the copied URL in the box, then click ‚ÄúDownload‚Äù to fetch video/audio links.</p>
      </div>
    </div>

    <div class="accordion-item">
      <button class="accordion-header" aria-expanded="false" aria-controls="faq3" id="faq3-button">
        What quality options are available?
      </button>
      <div id="faq3" class="accordion-content" role="region" aria-labelledby="faq3-button">
        <p>You can download in SD, HD (if available), or MP3 audio only.</p>
      </div>
    </div>

    <div class="accordion-item">
      <button class="accordion-header" aria-expanded="false" aria-controls="faq5" id="faq5-button">
        Is this service free and safe?
      </button>
      <div id="faq5" class="accordion-content" role="region" aria-labelledby="faq5-button">
        <p>Yes! It‚Äôs free and secure. We don‚Äôt store your downloads or any personal data.</p>
      </div>
    </div>
  </section>

  <script>
    function handlePasteOrClear() {
      const input = document.getElementById('videoUrl');
      const btn = document.getElementById('pasteBtn');
      if (input.value.trim()) {
        input.value = '';
        btn.textContent = 'Paste';
        return;
      }
      navigator.clipboard.readText().then(text => {
        input.value = text;
        btn.textContent = 'Clear';
      }).catch(() => alert("Clipboard access denied"));
    }

    async function fetchLinks() {
      const input = document.getElementById('videoUrl');
      const url = input.value.trim();
      if (!url) return alert("Please enter a TikTok URL.");

      try {
        const res = await fetch('/get-links', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ url })
        });
        const data = await res.json();
        if (!data.success) return alert(data.message);

        window.downloadData = data;

        const container = document.getElementById('options');
        container.innerHTML = '';

        const infoBox = document.createElement('div');
        infoBox.id = "videoInfoBox";
        infoBox.innerHTML = `
          <img src="${data.cover || ''}" alt="Thumbnail">
          <div class="info-text">
            <p>${data.title || 'Untitled Video'}</p>
            <p>@${data.username}</p>
          </div>`;
        container.appendChild(infoBox);

        if (data.music) container.innerHTML += `<button class="download-btn" onclick="download('music')">üéµ MP3 (Audio Only)</button>`;
        if (data.play) container.innerHTML += `<button class="download-btn" onclick="download('play')">üìΩÔ∏è SD Video</button>`;
        if (data.hdplay) container.innerHTML += `<button class="download-btn" onclick="download('hdplay')">üìΩÔ∏è HD Video</button>`;

        const tempBox = document.createElement('div');
        tempBox.id = "tempMessage";
        tempBox.textContent = "‚úÖ Video info fetched!";
        container.prepend(tempBox);
        setTimeout(() => tempBox.remove(), 2500);

        container.style.display = 'flex';
      } catch (err) {
        alert("Error fetching video.");
        console.error(err);
      }
    }

    function download(type) {
      const data = window.downloadData;
      if (!data[type]) return alert("Not available.");
      const a = document.createElement('a');
      a.href = `/proxy-download?url=${encodeURIComponent(data[type])}&username=${data.username}&type=${type}`;
      a.setAttribute('download', '');
      a.click();
    }

    document.querySelectorAll('.accordion-header').forEach(header => {
      header.addEventListener('click', () => {
        const expanded = header.getAttribute('aria-expanded') === 'true';
        document.querySelectorAll('.accordion-header').forEach(h => {
          h.setAttribute('aria-expanded', 'false');
          document.getElementById(h.getAttribute('aria-controls')).classList.remove('open');
          h.classList.remove('active');
        });
        if (!expanded) {
          header.setAttribute('aria-expanded', 'true');
          document.getElementById(header.getAttribute('aria-controls')).classList.add('open');
          header.classList.add('active');
        }
      });
    });
  </script>
</body>
</html>
