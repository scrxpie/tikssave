<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>TikTok Downloader</title>
  <style>
    * {
      box-sizing: border-box;
    }
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #2f2f2f;
      color: #e0e0e0;
      margin: 0;
      padding: 20px 15px 60px;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    h1 {
      font-size: 2.6rem;
      margin-bottom: 20px;
      text-align: center;
      color: #3b82f6;
      font-weight: 800;
      user-select: none;
    }
    form#mainForm {
      display: flex;
      width: 100%;
      max-width: 600px;
      gap: 10px;
      margin-bottom: 30px;
    }
    input[type="text"] {
      flex: 1;
      padding: 16px 20px;
      font-size: 1.25rem;
      border-radius: 10px;
      border: none;
      outline: none;
      background-color: #444;
      color: #eee;
    }
    input[type="text"]::placeholder {
      color: #bbb;
    }
    button {
      padding: 16px 20px;
      font-size: 1.1rem;
      border-radius: 10px;
      border: none;
      cursor: pointer;
      font-weight: 700;
    }
    button.paste-btn {
      background-color: #666;
      color: #ddd;
    }
    button.clear-btn {
      background-color: #b91c1c;
      color: #fff;
    }
    button.fetch-btn {
      background-color: #3b82f6;
      color: #fff;
      box-shadow: 0 0 12px #3b82f6aa;
    }
    #videoInfo {
      display: none;
      max-width: 600px;
      margin-bottom: 25px;
    }
    #videoInfo img {
      width: 100%;
      border-radius: 10px;
      margin-bottom: 10px;
    }
    #videoInfo h3 {
      font-size: 1.2rem;
      color: #fff;
    }
    #videoInfo p {
      color: #bbb;
    }
    #options {
      display: none;
      flex-direction: column;
      gap: 20px;
      width: 100%;
      max-width: 600px;
      margin-bottom: 40px;
    }
    .download-btn {
      background-color: #1e40af;
      color: #a5b4fc;
      font-size: 1.3rem;
      padding: 18px 15px;
      border-radius: 12px;
      border: none;
      cursor: pointer;
      width: 100%;
    }
    .accordion {
      max-width: 600px;
      width: 100%;
      background-color: #383838;
      border-radius: 12px;
      overflow: hidden;
    }
    .accordion-item {
      border-bottom: 1px solid #555;
    }
    .accordion-header {
      background-color: #444;
      padding: 18px 24px;
      font-weight: 700;
      font-size: 1.2rem;
      color: #3b82f6;
      cursor: pointer;
    }
    .accordion-header:hover {
      background-color: #3b82f6;
      color: #fff;
    }
    .accordion-content {
      max-height: 0;
      overflow: hidden;
      background-color: #2a2a2a;
      color: #ddd;
      padding: 0 24px;
      font-size: 1rem;
      transition: max-height 0.3s ease;
    }
    .accordion-content.open {
      padding: 15px 24px 20px;
      max-height: 600px;
    }
  </style>
</head>
<body>
  <h1>TikTok Downloader</h1>

  <form id="mainForm" onsubmit="return false;">
    <input type="text" id="videoUrl" placeholder="Paste TikTok video link here..." required />
    <button type="button" class="paste-btn" onclick="pasteLink()">Paste</button>
    <button type="button" class="clear-btn" onclick="clearInput()">Clear</button>
    <button type="button" class="fetch-btn" onclick="fetchLinks()">Download</button>
  </form>

  <div id="videoInfo">
    <img id="thumbnail" src="" alt="Thumbnail">
    <h3 id="videoTitle"></h3>
    <p id="author"></p>
  </div>

  <div id="options"></div>

  <section class="accordion">
    <div class="accordion-item">
      <div class="accordion-header" onclick="toggleAccordion(this)">How do I get the TikTok video link?</div>
      <div class="accordion-content"><p>Open TikTok, tap ‚ÄúShare‚Äù, then select ‚ÄúCopy Link‚Äù.</p></div>
    </div>
    <div class="accordion-item">
      <div class="accordion-header" onclick="toggleAccordion(this)">How do I paste and download?</div>
      <div class="accordion-content"><p>Paste the copied link above and click Download.</p></div>
    </div>
    <div class="accordion-item">
      <div class="accordion-header" onclick="toggleAccordion(this)">What formats are supported?</div>
      <div class="accordion-content"><p>You can download MP4 video or MP3 audio formats.</p></div>
    </div>
    <div class="accordion-item">
      <div class="accordion-header" onclick="toggleAccordion(this)">Is this tool free?</div>
      <div class="accordion-content"><p>Yes, it's completely free and requires no login.</p></div>
    </div>
  </section>

  <script>
    function pasteLink() {
      navigator.clipboard.readText().then(text => {
        document.getElementById('videoUrl').value = text;
      }).catch(() => alert("Clipboard access denied"));
    }

    function clearInput() {
      document.getElementById('videoUrl').value = '';
      document.getElementById('videoInfo').style.display = 'none';
      document.getElementById('options').style.display = 'none';
    }

    async function fetchLinks() {
      const url = document.getElementById('videoUrl').value.trim();
      if (!url) return alert("Please enter a TikTok URL.");

      try {
        const res = await fetch('/get-links', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ url })
        });

        const data = await res.json();
        if (!data.success) return alert(data.message);

        // Video bilgileri
        document.getElementById('thumbnail').src = data.cover;
        document.getElementById('videoTitle').textContent = data.title || 'No Title';
        document.getElementById('author').textContent = '@' + (data.username || 'unknown');
        document.getElementById('videoInfo').style.display = 'block';

        // Butonlar
        window.downloadData = data;
        const container = document.getElementById('options');
        container.innerHTML = '';
        if (data.music) {
          container.innerHTML += `<button class="download-btn" onclick="download('music')">üéµ MP3 (Audio Only)</button>`;
        }
        if (data.play) {
          container.innerHTML += `<button class="download-btn" onclick="download('play')">üìΩÔ∏è SD Video (Normal Quality)</button>`;
        }
        if (data.hdplay) {
          container.innerHTML += `<button class="download-btn" onclick="download('hdplay')">üìΩÔ∏è HD Video (High Quality)</button>`;
        }
        container.style.display = 'flex';
      } catch (err) {
        console.error(err);
        alert("Error fetching video data.");
      }
    }

    function download(type) {
      const data = window.downloadData;
      if (!data[type]) return alert("This format is not available.");

      const link = document.createElement('a');
      link.href = `/proxy-download?url=${encodeURIComponent(data[type])}&username=${data.username}&type=${type}`;
      link.setAttribute('download', '');
      link.click();
    }

    function toggleAccordion(header) {
      const content = header.nextElementSibling;
      const isOpen = content.classList.contains('open');
      document.querySelectorAll('.accordion-content').forEach(c => c.classList.remove('open'));
      if (!isOpen) content.classList.add('open');
    }
  </script>
</body>
</html>
