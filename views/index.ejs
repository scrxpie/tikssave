<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>TikTok Downloader</title>
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-5298191242036107"
     crossorigin="anonymous"></script>
  <style>
    * {
      box-sizing: border-box;
    }
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #222222;
      color: #e0e0e0;
      margin: 0;
      padding: 20px 15px 60px;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    h1 {
      font-size: 2.6rem;
      margin-bottom: 10px;
      text-align: center;
      color: #3b82f6;
      font-weight: 800;
      user-select: none;
    }
    form#mainForm {
      display: flex;
      width: 100%;
      max-width: 600px;
      gap: 8px;
      margin-bottom: 30px;
      position: relative;
    }
    input[type="text"] {
      flex: 1;
      padding: 16px 20px;
      font-size: 1.25rem;
      border-radius: 10px;
      border: none;
      outline: none;
      background-color: #444;
      color: #eee;
      transition: background-color 0.3s;
    }
    input[type="text"]::placeholder {
      color: #bbb;
    }
    input[type="text"]:focus {
      background-color: #555;
    }
    button {
      padding: 16px 24px;
      font-size: 1.25rem;
      border-radius: 10px;
      border: none;
      cursor: pointer;
      font-weight: 700;
      transition: background-color 0.3s;
      user-select: none;
      flex-shrink: 0;
    }
    button:hover {
      filter: brightness(1.1);
    }
    button:active {
      filter: brightness(0.9);
    }
    button.paste-btn {
      background-color: #666;
      color: #ddd;
      order: 2; /* Saƒüda */
    }
    button.paste-btn:hover {
      background-color: #777;
    }
    button.clear-btn {
      background-color: #a00;
      color: #fff;
      order: 1;
      display: none;
    }
    button.clear-btn:hover {
      background-color: #c33;
    }
    button.fetch-btn {
      background-color: #3b82f6;
      color: #fff;
      box-shadow: 0 0 12px #3b82f6aa;
      order: 3;
    }
    button.fetch-btn:hover {
      background-color: #2563eb;
      box-shadow: 0 0 20px #2563ebcc;
    }

    #options {
      flex-direction: column;
      gap: 16px;
      width: 100%;
      max-width: 600px;
      margin-bottom: 40px;
      align-items: center;
      display: none;
    }
    .download-btn {
      background-color: #1e40af;
      color: #a5b4fc;
      font-weight: 700;
      font-size: 1.3rem;
      padding: 16px 20px;
      border-radius: 12px;
      border: none;
      cursor: pointer;
      box-shadow: 0 0 10px #3b82f655;
      transition: background-color 0.3s, box-shadow 0.3s;
      user-select: none;
      width: 100%;
      max-width: 300px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
    }
    .download-btn:hover {
      background-color: #3b82f6;
      color: #fff;
      box-shadow: 0 0 20px #3b82f6cc;
    }

    #preview-container {
      max-width: 600px;
      margin-bottom: 40px;
      display: none;
      flex-direction: column;
      align-items: center;
      gap: 12px;
      border-radius: 12px;
      background: #333;
      padding: 15px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.7);
    }
    #preview-container img {
      width: 100%;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.7);
    }
    #preview-container h2 {
      color: #3b82f6;
      text-align: center;
      margin: 0 0 10px;
      user-select: text;
    }

    .accordion {
      width: 100%;
      max-width: 600px;
      background-color: #383838;
      border-radius: 12px;
      box-shadow: 0 4px 14px rgb(0 0 0 / 0.5);
      overflow: hidden;
      user-select: none;
      margin-bottom: 60px;
    }
    .accordion-item {
      border-bottom: 1px solid #555;
    }
    .accordion-item:last-child {
      border-bottom: none;
    }
    .accordion-header {
      background-color: #444;
      cursor: pointer;
      padding: 18px 24px;
      font-weight: 700;
      font-size: 1.2rem;
      color: #3b82f6;
      display: flex;
      justify-content: space-between;
      align-items: center;
      transition: background-color 0.3s;
      user-select: none;
    }
    .accordion-header:hover {
      background-color: #3b82f6;
      color: #fff;
    }
    .accordion-header.active {
      background-color: #3b82f6;
      color: #fff;
    }
    .accordion-content {
      max-height: 0;
      overflow: hidden;
      background-color: #2a2a2a;
      color: #ddd;
      padding: 0 24px;
      font-size: 1rem;
      transition: max-height 0.35s ease;
      user-select: text;
    }
    .accordion-content.open {
      padding: 15px 24px 20px;
      max-height: 600px;
    }
    .accordion-content p {
      margin: 0;
      line-height: 1.6;
    }
    .accordion-header::after {
      content: "‚ñ∂";
      font-size: 1rem;
      transition: transform 0.3s;
      color: #a5b4fc;
    }
    .accordion-header.active::after {
      transform: rotate(90deg);
      color: #fff;
    }

    #about {
      max-width: 600px;
      margin: 0 auto 60px;
      color: #ccc;
      font-size: 1.1rem;
      line-height: 1.8;
      text-align: left;
      user-select: text;
    }
    #about h2 {
      color: #3b82f6;
      font-weight: 700;
      margin-bottom: 18px;
      font-size: 1.8rem;
    }
    #about p {
      margin-bottom: 30px;
    }

    footer {
      max-width: 600px;
      color: #777;
      font-size: 0.9rem;
      text-align: center;
      margin: 30px auto 15px;
      user-select: none;
    }
    footer a {
      color: #3b82f6;
      text-decoration: none;
    }
    footer a:hover {
      text-decoration: underline;
    }

    @media (max-width: 480px) {
      h1 {
        font-size: 2rem;
      }
      input[type="text"], button, .download-btn, .accordion-header {
        font-size: 1.1rem;
        padding: 14px 16px;
      }
      #options {
        max-width: 100%;
      }
      form#mainForm {
        flex-direction: column;
      }
      button.paste-btn, button.clear-btn {
        order: 2;
        width: 100%;
      }
      button.fetch-btn {
        order: 3;
        width: 100%;
        margin-top: 8px;
      }
      button {
        width: 100%;
        margin-top: 10px;
      }
      #about {
        font-size: 1rem;
        line-height: 1.6;
      }
    }
  </style>
</head>
<body>
  <h1>TikTok Downloader</h1>

  <form id="mainForm" onsubmit="return false;">
    <input type="text" id="videoUrl" placeholder="Paste TikTok video link here..." autocomplete="off" required value="<%= videoData?.sourceUrl || '' %>" />
    <button type="button" class="clear-btn" onclick="clearInput()">Clear</button>
    <button type="button" class="paste-btn" onclick="pasteLink()">Paste</button>
    <button type="button" class="fetch-btn" onclick="fetchLinks()">Download</button>
  </form>

  <div id="preview-container" style="<%= videoData ? 'display:flex;' : 'display:none;' %>">
    <img id="preview-thumbnail" src="<%= videoData?.cover || '' %>" alt="Video thumbnail" />
    <h2 id="preview-title"><%= videoData?.title || '' %></h2>
  </div>

  <div id="options" style="<%= videoData ? 'display:flex; flex-direction: column; align-items:center; gap:16px;' : 'display:none;' %>">
    <% if (videoData?.music) { %>
      <a class="download-btn" href="/proxy-download?url=<%= encodeURIComponent(videoData.music) %>&username=<%= encodeURIComponent(videoData.username) %>&type=music">üéµ MP3 (Audio Only)</a>
    <% } %>
    <% if (videoData?.play) { %>
      <a class="download-btn" href="/proxy-download?url=<%= encodeURIComponent(videoData.play) %>&username=<%= encodeURIComponent(videoData.username) %>&type=play">üìΩÔ∏è SD Video (Normal Quality)</a>
    <% } %>
    <% if (videoData?.hdplay) { %>
      <a class="download-btn" href="/proxy-download?url=<%= encodeURIComponent(videoData.hdplay) %>&username=<%= encodeURIComponent(videoData.username) %>&type=hdplay">üìΩÔ∏è HD Video (High Quality)</a>
    <% } %>
  </div>

  <section id="about" aria-label="About TikTok Downloader">
    <h2>Unlimited TikTok Downloads</h2>
    <p>Download TikTok videos as much as you want without any limits ‚Äî totally free and easy to use. Our downloader lets you save your favorite videos anytime, anywhere.</p>
    
    <h2>No Watermarks</h2>
    <p>Save TikTok videos in MP4 format without any watermarks or TikTok logos ‚Äî clean videos ready for sharing or personal use.</p>
    
    <h2>MP4 and MP3 Formats</h2>
    <p>Choose to download videos in high-quality MP4 or convert to MP3 audio. Whether you want the video or just the sound, our tool makes it easy.</p>
    
    <h2>How to Download TikTok Videos</h2>
    <p>
      Simply paste the TikTok video link above, click ‚ÄúDownload‚Äù, and then choose your preferred format and quality to download instantly. No registration or software needed.
    </p>
  </section>

  <section class="accordion" aria-label="Frequently Asked Questions">
    <div class="accordion-item">
      <button class="accordion-header" aria-expanded="false" aria-controls="faq1" id="faq1-button">
        How do I get the TikTok video link?
      </button>
      <div id="faq1" class="accordion-content" role="region" aria-labelledby="faq1-button">
        <p>Open the TikTok app or website, tap ‚ÄúShare‚Äù on the video, then select ‚ÄúCopy Link‚Äù to get the video URL.</p>
      </div>
    </div>

    <div class="accordion-item">
      <button class="accordion-header" aria-expanded="false" aria-controls="faq2" id="faq2-button">
        How do I paste the link and download?
      </button>
      <div id="faq2" class="accordion-content" role="region" aria-labelledby="faq2-button">
        <p>Paste the copied URL into the input box above, click ‚ÄúDownload‚Äù to get download options, then click a button to start downloading.</p>
      </div>
    </div>

    <div class="accordion-item">
      <button class="accordion-header" aria-expanded="false" aria-controls="faq3" id="faq3-button">
        What download quality options are available?
      </button>
      <div id="faq3" class="accordion-content" role="region" aria-labelledby="faq3-button">
        <p>You can download audio only (MP3), standard video quality (SD), or high-quality video (HD) if available.</p>
      </div>
    </div>

    <div class="accordion-item">
      <button class="accordion-header" aria-expanded="false" aria-controls="faq5" id="faq5-button">
        Is this service free and safe?
      </button>
      <div id="faq5" class="accordion-content" role="region" aria-labelledby="faq5-button">
        <p>Yes! Our downloader is completely free and respects your privacy. We do not store your downloads.</p>
      </div>
    </div>
  </section>

  <footer>
    <p>¬© 2025 TikTok Downloader. All rights reserved. | <a href="/terms">Terms of Service</a> | <a href="/privacy">Privacy Policy</a> | <a href="/rights">Rights</a></p>
  </footer>

  <script>
    const videoUrlInput = document.getElementById('videoUrl');
    const clearBtn = document.querySelector('.clear-btn');
    const pasteBtn = document.querySelector('.paste-btn');
    const previewContainer = document.getElementById('preview-container');
    const previewThumbnail = document.getElementById('preview-thumbnail');
    const previewTitle = document.getElementById('preview-title');
    const optionsContainer = document.getElementById('options');

    videoUrlInput.addEventListener('input', () => {
      if(videoUrlInput.value.trim() !== '') {
        clearBtn.style.display = 'inline-block';
        pasteBtn.style.display = 'none';
      } else {
        clearBtn.style.display = 'none';
        pasteBtn.style.display = 'inline-block';
        previewContainer.style.display = 'none';
        optionsContainer.style.display = 'none';
        optionsContainer.innerHTML = '';
      }
    });

    function clearInput() {
      videoUrlInput.value = '';
      clearBtn.style.display = 'none';
      pasteBtn.style.display = 'inline-block';
      previewContainer.style.display = 'none';
      optionsContainer.style.display = 'none';
      optionsContainer.innerHTML = '';
    }

    function pasteLink() {
      navigator.clipboard.readText()
        .then(text => {
          videoUrlInput.value = text;
          clearBtn.style.display = 'inline-block';
          pasteBtn.style.display = 'none';
          previewContainer.style.display = 'none';
          optionsContainer.style.display = 'none';
          optionsContainer.innerHTML = '';
        })
        .catch(() => alert("Clipboard access denied"));
    }

    async function fetchLinks() {
      const url = videoUrlInput.value.trim();
      if (!url) {
        alert("Please enter a TikTok URL.");
        return;
      }

      try {
        const res = await fetch('/get-links', {
          method: 'POST',
          headers: {'Content-Type': 'application/json'},
          body: JSON.stringify({url})
        });

        const data = await res.json();

        if (!data.success) {
          alert(data.message || "Failed to fetch download links.");
          return;
        }

        // Gelen veriyi global deƒüi≈ükene atƒ±yoruz
        window.downloadData = data;

        // √ñnizleme g√∂sterimi
        if(data.cover && data.title) {
          previewThumbnail.src = data.cover;
          previewTitle.textContent = data.title;
          previewContainer.style.display = 'flex';
        } else {
          previewContainer.style.display = 'none';
        }

        // ƒ∞ndirme butonlarƒ±
        optionsContainer.innerHTML = '';
        if (data.music) {
          optionsContainer.innerHTML += `<button class="download-btn" onclick="download('music')">üéµ MP3 (Audio Only)</button>`;
        }
        if (data.play) {
          optionsContainer.innerHTML += `<button class="download-btn" onclick="download('play')">üìΩÔ∏è SD Video (Normal Quality)</button>`;
        }
        if (data.hdplay) {
          optionsContainer.innerHTML += `<button class="download-btn" onclick="download('hdplay')">üìΩÔ∏è HD Video (High Quality)</button>`;
        }
        optionsContainer.style.display = 'flex';

      } catch (err) {
        alert("Error fetching download links.");
        console.error(err);
      }
    }

    function download(type) {
      if (!window.downloadData || !window.downloadData[type]) {
        alert("Download link not available.");
        return;
      }
      const urlEncoded = encodeURIComponent(window.downloadData[type]);
      const username = encodeURIComponent(window.downloadData.username || '');
      const link = document.createElement('a');
      link.href = `/proxy-download?url=${urlEncoded}&username=${username}&type=${type}`;
      link.setAttribute('download', '');
      document.body.appendChild(link);
      link.click();
      link.remove();
    }

    // Accordion
    const accordions = document.querySelectorAll('.accordion-header');
    accordions.forEach(acc => {
      acc.addEventListener('click', () => {
        const expanded = acc.getAttribute('aria-expanded') === 'true';

        accordions.forEach(a => {
          a.setAttribute('aria-expanded', 'false');
          document.getElementById(a.getAttribute('aria-controls')).classList.remove('open');
        });

        if (!expanded) {
          acc.setAttribute('aria-expanded', 'true');
          document.getElementById(acc.getAttribute('aria-controls')).classList.add('open');
        }
      });
    });

  </script>
</body>
</html>
